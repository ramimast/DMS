// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$DMS_Project-primary: mat.define-palette(mat.$indigo-palette);
$DMS_Project-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$DMS_Project-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$DMS_Project-theme: mat.define-light-theme((
  color: (
    primary: $DMS_Project-primary,
    accent: $DMS_Project-accent,
    warn: $DMS_Project-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($DMS_Project-theme);

/* You can add global styles to this file, and also import other style files */

/* Importing Bootstrap SCSS file. */
@import 'bootstrap/scss/bootstrap';

html, body { height: 100%; }
// body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


/* // <uniquifier>: Use a uniquifier for the class name
// <weight>: Use a value from 100 to 900 */

* {
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}
  :root {
    /* --primary-color: #4285f4; Set your primary color */
    /* --secondary-color: #0d47a1; Set your secondary color */
    --background-color: #0F2D79; /* Set your background color */
    /* --text-color: white;  */
    /* Set your text color */
    --enablebtn-bg-color:rgb(164, 60, 149);
    --enablebtn-txt-color:rgb(255, 255, 255);
    --disablebtn-bg-color:gray;
    --disablebtn-txt-color:rgb(204, 204, 204);
    --error-txt:red;
    --valid-color:green;
    --invalid-color:rgb(146, 142, 142);
  }
  


  #style-1::-webkit-scrollbar-track
  {
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
    border-radius: 10px;
    background-color: #F5F5F5;
  }
  
  #style-1::-webkit-scrollbar
  {
    width: 12px;
    background-color: #F5F5F5;
  }
  
  #style-1::-webkit-scrollbar-thumb
  {
    border-radius: 10px;
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
    background-color: #555;
  }
  

.btn{
    font-weight: 400;
    width: 120px;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: 1px solid transparent;
    margin-bottom: 20px;
    padding: 0.5rem 0.75rem;
    font-size: 1rem;
    line-height: 0.9;
    border-radius: 0.50rem;
    transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}


.error{
  color: var(--error-txt);
  font-size:11px;
  font-weight: bold;
  text-transform: capitalize;
}
.success{
  color:var(--valid-color) !important;
  font-weight:bold;
  font-size:11px;
  text-transform: capitalize;
}
.btn-enabled {
  background-color: var(--enablebtn-bg-color); /* Set your desired color for enabled state */
  color: var(--enablebtn-txt-color); /* Set your desired text color for enabled state */
}

/* Define a style for disabled buttons */
.btn-disabled {
  background-color: var(--disablebtn-bg-color); /* Set your desired color for disabled state */
  color: var(--disablebtn-txt-color); /* Set your desired text color for disabled state */
}
